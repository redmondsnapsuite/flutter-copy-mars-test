name: Firebase Build IOS

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch: 

jobs:
  build:
    name: Build and Deploy
    runs-on: macos-latest

    steps:
      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install certificates and provisioning profile
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
          PP_PATH=$RUNNER_TEMP/profile.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Unlock the keychain
          security create-keychain -p "" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "" $KEYCHAIN_PATH

          security import $CERTIFICATE_PATH -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Install the provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0' # Specify the version of Flutter you are using

      - name: Install dependencies
        run: flutter pub get

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Build iOS app
        run: flutter build ios --release

      - name: Deploy to Firebase App Distribution
        run: firebase appdistribution:distribute build/ios/ipa/mars_test.ipa --app ${{ secrets.FIREBASE_APP_ID_IOS }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}